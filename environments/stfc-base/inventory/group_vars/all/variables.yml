---
# common variables for all stfc environments - stfc-development, stfc-production, stfc-staging 

#############################################################################
# Images configuration

community_images_custom_properties:
  - "hw_scsi_model=virtio-scsi"
  - "hw_disk_bus=scsi"

# don't want any kubernetes images so ignore them
# we use our own capi images
community_images_azimuth_images_manifest: >-
  {{ lookup('url', community_images_azimuth_images_manifest_url, split_lines = False) | from_json | dict2items | rejectattr('key', 'match', '^kubernetes.*') | items2dict
  }}

# prefix all azimuth community image names with azimuth-* 
parsed_community_images: >-
  {% set result = {} %}
  {% for dict in [community_images_default, community_images_extra] %}
  {%   for key, image in dict.items() %}
  {%     if "name" in image %}
  {%        set _ = image.update({'name': 'azimuth-' + image.name}) %}
  {%     endif %}
  {%     set _ = result.update({key: image}) %}
  {%   endfor %}
  {% endfor %}
  {{ result }}

# convert string outputted by jinja into a dictionary
# community_images: "{{ parsed_community_images | replace('\"', '') | trim }}"
community_images: {}

#############################################################################
# Ansible Playbooks For STFC Security Compliance 

# Define common variables to be reused
stfc_compliance_extra_vars:
  ansible_init_collections:
    - name: https://github.com/stfc/cloud-image-builders.git
      version: "main"
      type: git
  ansible_init_playbooks:
    - name: azimuth.security.prepare_user_image

# Workstation configuration
azimuth_caas_stackhpc_workstation_extra_vars_overrides: "{{ stfc_compliance_extra_vars }}"

# RStudio configuration
azimuth_caas_stackhpc_rstudio_extra_vars_overrides: "{{ stfc_compliance_extra_vars }}"

# Repo2Docker configuration
azimuth_caas_stackhpc_repo2docker_extra_vars_overrides: "{{ stfc_compliance_extra_vars }}"

# Slurm configuration
azimuth_caas_stackhpc_slurm_appliance_extra_vars_overrides: "{{ stfc_compliance_extra_vars }}"

#############################################################################
# STFC Cloud CAPI Cluster Templates

# set possible capi cluster templates for azimuth capi operator
capi_image_list:
  - "capi-ubuntu-2204-kube-v1.32.4-2025-05-02"
  - "capi-ubuntu-2204-kube-v1.31.8-2025-05-02"

azimuth_capi_operator_cluster_templates_extra: |-
  {
    {% for image in capi_image_list %}
    {% set image_id = (lookup('pipe', 'openstack image list -c Name -c ID -f json') | from_json | selectattr('Name', '==', image))[0].ID | string() %}
    {% set kube_version_dot_v = image | regex_search( 'v[0-9][.][0-9]*[.][0-9]*' ) | string() %}
    {% set kube_version_dot = image | regex_search( '[0-9][.][0-9]*[.][0-9]*' ) | string() %}
    {% set kube_version = kube_version_dot | replace('.', '-') | string() %}
    "kube-{{ kube_version }}": {
      "annotations": {{ azimuth_capi_operator_cluster_template_annotations }},
      "spec": {{
        azimuth_capi_operator_cluster_template_defaults |
          combine(
            {
              "label": kube_version_dot_v,
              "description": "Kubernetes " ~ kube_version_dot_v ~ " with HA control plane.",
              "values": {
                "kubernetesVersion": kube_version_dot,
                "machineImageId": image_id,
              },
            },
            recursive = True
          )
      }},
    },
    {% endfor %}
  }


#############################################################################
# Configuration for the seed node (HA) or single node

# The CIDR of the subnet that should be created
infra_network_cidr: 192.168.100.0/24
# The ID of the external network to connect to via a router
infra_external_network_id: "5283f642-8bd8-48b6-8608-fa3006ff4539"

# The id of the flavor to use for the node
# For a seed node for an HA cluster, 8GB RAM is fine (maybe even 4GB)
# For a single node deployment, >= 16GB RAM is recommended
infra_flavor_id: "f120e108-7883-4933-bb76-4f88909447f6" # l6.c4 (4 vCPU, ~15GB RAM, 75GB disk)

# The size in GB for the data volume
# This will hold all cluster data, including Kubernetes resources, and also PVC data
infra_data_volume_size: 100

# use a pre-existing STFC Cloud image rather than a community one
# allows us to keep all existing cloud-init security configuration  
infra_image_name: "ubuntu-jammy-22.04-nogui"
infra_image_id: "{{ (lookup('pipe', 'openstack image list -c Name -c ID -f json') | from_json | selectattr('Name', '==', infra_image_name ))[0].ID }}"

#############################################################################
# Configuration for Azimuth Cluster Operator

# set user-defined clusters to have 5 control plane nodes
# sacrifice compute - sacrificing compute to make etcd recovery much much easier
azimuth_capi_operator_capi_helm_control_plane_count: 5

# adding some extra capi helm values that aren't templated out as ansible variables
azimuth_capi_operator_capi_helm_values_overrides:
  controlPlane:
    machineCount: "{{ azimuth_capi_operator_capi_helm_control_plane_count }}"
  clusterNetworking:
    internalNetwork:
      nodeCidr: 192.168.128.0/17
  registryMirrors:
    docker.io:
      - "https://dockerhub.stfc.ac.uk"
  addons: "{{ azimuth_capi_operator_helm_addon_overrides }}"

azimuth_capi_operator_capi_helm_pods_cidr: 10.0.0.0/13
azimuth_capi_operator_capi_helm_services_cidr: 10.8.0.0/13

azimuth_capi_operator_capi_helm_openstack_loadbalancer_provider: amphora
azimuth_capi_operator_capi_helm_csi_cinder_default_availability_zone: ceph

azimuth_capi_operator_capi_helm_control_plane_omit_failure_domain: true
azimuth_capi_operator_capi_helm_worker_failure_domain:

#############################################################################
# Azimuth configuration

# Indicates if the Zenith app proxy should be enabled
azimuth_apps_enabled: true
# Indicates if Kubernetes support should be enabled
azimuth_kubernetes_enabled: true
# Indicates if Cluster-as-a-Service (CaaS) should be enabled
azimuth_clusters_enabled: false

# The name of the current cloud
azimuth_current_cloud_name: stfc-cloud
# The label for the current cloud
azimuth_current_cloud_label: STFC Cloud Azimuth Platform

#############################################################################
# Configuration of authenticators / authentication methods

# Use the STFC domain for now
azimuth_openstack_domain: stfc

azimuth_openstack_auth_url: https://openstack.stfc.ac.uk:5000/v3

# Whether the password authenticator should be enabled (enabled by default)
azimuth_authenticator_password_enabled: true
# The label for the password authenticator
azimuth_authenticator_password_label: "Federal Login"

# Whether the appcred authenticator should be enabled (not enabled by default)
azimuth_authenticator_appcred_enabled: false
# The label for the appcred authenticator
azimuth_authenticator_appcred_label: "Application Credential"

azimuth_authenticator_federated_enabled: true
azimuth_authenticator_federated_provider: "openid"
azimuth_authenticator_federated_protocol: "openid"
azimuth_authenticator_federated_label: Login using IAM

azimuth_theme_bootstrap_css_url: https://bootswatch.com/5/zephyr/bootstrap.css

azimuth_theme_custom_css: |-
  : root {
    --bs-primary: #ff5733;
  }

  .navbar {
    background-color: var(--bs-primary) !important;
  }

  .navbar .navbar-brand,
  .navbar .nav-link,
  .navbar .navbar-text {
    color: var(--bs-light) !important;
  }

  .modal pre {
    background-color: var(--bs-primary);
    color: var(--bs-light);
    padding: 1rem;
    max-height: 400px;
    overflow: scroll;
  }

  .sticky-footer a {
    display: inline-flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
  }

  .sticky-footer a::before {
    content: '';
    display: inline-block;
    width: 220px;
    height: 60px;
    background-image: url('https://www.ukri.org/wp-content/themes/ukri/assets/img/ukri-stfc-standard-logo.png');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    flex-shrink: 0;
  }

  .sticky-footer a img {
    height: 60px;
    flex-shrink: 0;
    vertical-align: middle;
  }
