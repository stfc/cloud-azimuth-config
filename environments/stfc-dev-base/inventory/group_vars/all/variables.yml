---
# common variables for azimuth instances running on STFC Cloud Staging 

#############################################################################
# Configuration for the seed node (HA) or single node

# use a pre-existing STFC Cloud image rather than a community one
# allows us to keep all existing cloud-init security configuration  
infra_image_id: 87e543ec-98bc-4299-b7d7-863a2e9a24e8 # ubuntu-jammy-22.04-nogui

infra_flavor_id: d314c1e5-a1be-4aae-97f4-a840d4f53428 # l3.xsmall

# Use the first available external network
infra_external_network_id: "0dc30001-edfb-4137-be76-8e51f38fd650"

#############################################################################
# Configuration of authenticators / authentication methods

azimuth_openstack_auth_url: https://dev-openstack.stfc.ac.uk:5000/v3
azimuth_openstack_verify_ssl: false

#############################################################################
# STFC Cloud CAPI Cluster Templates

# set possible capi cluster templates for azimuth capi operator
capi_image_list:
  - "capi-ubuntu-2204-kube-v1.33.4-2025-08-27"
  - "capi-ubuntu-2204-kube-v1.32.8-2025-08-27"

azimuth_capi_operator_cluster_templates_extra: |-
  {
    {% for image in capi_image_list %}
    {% set image_id = (lookup('pipe', 'openstack image list -c Name -c ID -f json') | from_json | selectattr('Name', '==', image))[0].ID | string() %}
    {% set kube_version_dot_v = image | regex_search( 'v[0-9][.][0-9]*[.][0-9]*' ) | string() %}
    {% set kube_version_dot = image | regex_search( '[0-9][.][0-9]*[.][0-9]*' ) | string() %}
    {% set kube_version = kube_version_dot | replace('.', '-') | string() %}
    "kube-{{ kube_version }}": {
      "annotations": {{ azimuth_capi_operator_cluster_template_annotations }},
      "spec": {{
        azimuth_capi_operator_cluster_template_defaults |
          combine(
            {
              "label": kube_version_dot_v,
              "description": "Kubernetes " ~ kube_version_dot_v ~ " with HA control plane.",
              "values": {
                "kubernetesVersion": kube_version_dot,
                "machineImageId": image_id,
                "controlPlane": {
                  "machineCount": azimuth_capi_operator_capi_helm_control_plane_count,
                },
              },
            },
            recursive = True
          )
      }},
    },
    {% endfor %}
  }