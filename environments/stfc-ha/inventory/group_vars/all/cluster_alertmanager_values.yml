capi_cluster_alertmanager_values:
  global:
    resolve_timeout: 1h
    smtp_smarthost:
    smtp_from: cloud-support@stfc.ac.uk
    smtp_require_tls: false
    # Opsgenie Credentials are a WIP. They should be moved to secrets eventually, perhaps per-cluster.
    # opsgenie_api_key: 
    # opsgenie_api_url:

  route:
    # we need a null reciever to workaround azimuth addon enforced defaults 
    # https://github.com/azimuth-cloud/capi-helm-charts/blob/main/charts/cluster-addons/templates/monitoring/kube-prometheus-stack.yaml#L41-L44
    receiver: "null"
    routes:
      - receiver: "default-receiver"
        group_by: ["cluster", "service"]
        group_wait: 30m
        group_interval: 4h
        repeat_interval: 2d
        active_time_intervals:
          - officehours

        # mute watchdog alert
        #   - this should always be firing
        # mute infoinhibitor alert
        #   - not useful by itself
        #   - if this is firing, we're suppressing severity=info alerts
        #   - infoinhibitor rules should be automatically configured
        matchers:
          - alertname !~ "Watchdog|InfoInhibitor" 

  inhibit_rules:
    # mute warning/info alerts on same service if a critical alert is firing - less noise
    - source_matchers:
        - severity = "critical"
      target_matchers:
        - severity = "warning"
      equal: [cluster, service]

  time_intervals:
    - name: officehours
      time_intervals:
        - times:
            - start_time: 07:00
              end_time: 18:00
          weekdays: ["monday:friday"]
          location: "Europe/London"

  receivers:
    - name: "null"
    - name: default-receiver
      email_configs:
        - to: cloud-support@stfc.ac.uk
          send_resolved: true
          headers:
            subject: |
              {%- raw %}
              "({{ .CommonLabels.env }} : {{ .CommonLabels.cluster }}) {{ or .CommonLabels.alertname "Multiple Alerts" }}"
              {%- endraw %}
          html: |-
            {%- raw %}
            <b>You have the following alerts:</b>
            {{ range .Alerts }}
                <b>{{.Labels.alertname}}</b><br/>
                <b>Annotations:</b><br/>
                <ul>{{ range .Annotations.SortedPairs }}
                    <li><strong>{{ .Name }}</strong> = {{ .Value }}</li>
                {{ end }}</ul>
                <b>Labels:</b>
                <ul>{{ range .Labels.SortedPairs }}
                    <li><strong>{{ .Name }}</strong> = {{ .Value }}</li>
                {{ end }}</ul>
                <p><a href="{{ .GeneratorURL }}">View in Prometheus</a></p>
            {{ end }}
            {%- endraw %}
          text: |-
            {%- raw %}
            You have the following alerts:
            {{ range .Alerts }}
            * [{{ .Labels.severity }}] {{.Labels.alertname}}
              Annotations:
              {{ range .Annotations.SortedPairs }}
              {{ .Name }} = {{ .Value }}
              {{ end }}
              Labels:
              {{ range .Labels.SortedPairs }}
              {{ .Name }} = {{ .Value }}
              {{ end }}
              View in Prometheus: {{ .GeneratorURL }}
            {{ end }}
            {%- endraw %}
      # opsgenie_configs:
      #  - # https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config
      # Defaults here: https://github.com/prometheus/alertmanager/blob/c653800ffe4af31f4c3f9d81708301f3dd5600fa/template/default.tmpl#L43
    - name: 'slack-receiver'
      slack_configs:
        # Whether to notify about resolved alerts.
        send_resolved: false
        # The Slack webhook URL. Either api_url or api_url_file should be set.
        # Defaults to global settings if none are set here.
        api_url: 
        api_url_file: 
        # The channel or user to send notifications to.
        channel: 
        # API request data as defined by the Slack webhook API.
        icon_emoji: 
        icon_url: 
        link_names: 
        username: 
        # The following parameters define the attachment.
        actions:
          callback_id: 
          color: 
          fallback: 
        fields:
          footer: 
          mrkdwn_in: 
          pretext: 
          short_fields: 
          text: 
          title: 
          title_link: 
          image_url: 
          thumb_url: 
        # The HTTP client's configuration.
        http_config: 

  templates:
    - "/etc/alertmanager/config/*.tmpl"